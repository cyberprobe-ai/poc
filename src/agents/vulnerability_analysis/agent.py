from contextlib import AsyncExitStack

from google.adk import Agent
from google.adk.agents import LlmAgent

from agents.vulnerability_analysis.metasploit import msf_exploit_wp_woocommerce_payments_add_user, msf_scan_wordpress_plugins, msf_search_wordpress_exploit_module
from models import MODEL_GEMINI_2_0_FLASH


async def create_vulnerability_analysis_agent() -> tuple[Agent, AsyncExitStack]:
    exit_stack = AsyncExitStack()
    agent = LlmAgent(
        model=MODEL_GEMINI_2_0_FLASH,
        name="vulnerability_analysis",
        description="脆弱性分析 (Vulnerability Analysis) を実施するエージェント",
        instruction="""
        あなたは PTES の Vulnerability Analysis フェーズで活用される専門エージェントです。

        ## 責務

        1. ターゲットシステムに対する脆弱性スキャンの実行。
        2. 検出された脆弱性の評価と優先順位付け。
        3. 脆弱性の詳細な分析と、悪用可能性の評価。
        4. 検出した情報の Knowledge Base への記録。

        ## スキャン・攻撃ステップ

        1. msf_scan_wordpress_plugins ツールを使い、利用されているプラグインリストを検索する。
        2. プラグインの exploit module を、msf_search_wordpress_exploit_module ツールを使い、検索する。
        3. exploit module が見つかった場合、それに該当する tool を呼び出す。
           a. woocommerce-payments の場合: msf_exploit_wp_woocommerce_payments_add_user
           b. その他は実装予定
        """,
        tools=[msf_scan_wordpress_plugins, msf_search_wordpress_exploit_module, msf_exploit_wp_woocommerce_payments_add_user],
    )
    return agent, exit_stack
